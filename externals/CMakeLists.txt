include(ExternalProject)

# nghttp2
ExternalProject_Add(NGHTTP2
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/externals/nghttp2
	DOWNLOAD_COMMAND ""
	BUILD_ALWAYS 1
	CMAKE_ARGS
		-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
		-DCMAKE_VERBOSE_MAKEFILE=ON
		-DCMAKE_LIBRARY_ARCHITECTURE=${CMAKE_LIBRARY_ARCHITECTURE}
		-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_SYSTEM_PROCESSOR=${CMAKE_SYSTEM_PROCESSOR}
		-DENABLE_LIB_ONLY=1
		-DENABLE_SHARED_LIB=1
		-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/nghttp2
		# Set the 'LIBDIR' value to not use the multiarch path in the library installation path.
		-DCMAKE_INSTALL_LIBDIR=${CMAKE_BINARY_DIR}/nghttp2/lib
)


# curl
ExternalProject_Add(CURL
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/externals/curl
	DOWNLOAD_COMMAND ""
	DEPENDS NGHTTP2
	BUILD_ALWAYS 1
	CMAKE_ARGS
		-DCMAKE_VERBOSE_MAKEFILE=ON
		-DCMAKE_LIBRARY_ARCHITECTURE=${CMAKE_LIBRARY_ARCHITECTURE}
		-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
		-DPKG_CONFIG_EXECUTABLE=${PKG_CONFIG_EXECUTABLE}
		-DCMAKE_SYSTEM_PROCESSOR=${CMAKE_SYSTEM_PROCESSOR}
		-DBUILD_SHARED_LIBS=ON
		-DHTTP_ONLY=ON
		-DUSE_NGHTTP2=ON
		-DCURL_ZLIB=ON
		-DUSE_OPENSSL=ON
		-DBUILD_TESTING=ON
		-DBUILD_CURL_EXE=ON
		-DENABLE_DEBUG=ON
		-DENABLE_IPV6=OFF
		-DCURL_CA_BUNDLE:STRING=auto
		-DCURL_CA_PATH:STRING=none
		-DNGHTTP2_INCLUDE_DIR=${CMAKE_BINARY_DIR}/nghttp2/include
		-DNGHTTP2_LIBRARY_PATH=${CMAKE_BINARY_DIR}/nghttp2/lib
		-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/curl
		-DCMAKE_INSTALL_LIBDIR=${CMAKE_BINARY_DIR}/curl/lib
	PATCH_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/patch_curl.sh
)

